"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = evalComparable;
const assertions_ts_1 = require("../../utils/assertions.js");
const results_ts_1 = require("../results.js");
const query_ts_1 = __importDefault(require("../visitors/query.js"));
const function_expr_ts_1 = __importDefault(require("./function-expr.js"));
function evalComparable(ctx, item, node) {
    switch (node.type) {
        case "Literal":
            return node.value;
        case "RelSingularQuery":
        case "AbsSingularQuery": {
            const root = node.type === "RelSingularQuery" ? item.value : item.root;
            if (node.segments.length === 0) {
                return root;
            }
            const nodeList = (0, results_ts_1.createNodeList)();
            (0, query_ts_1.default)(ctx, item.root, root, node, (v) => {
                nodeList.push(v);
            });
            return nodeList;
        }
        case "FunctionExpr":
            return (0, function_expr_ts_1.default)(ctx, item, node);
        default:
            (0, assertions_ts_1.assertDefinedNodeType)(node);
    }
}
//# sourceMappingURL=comparable.js.map