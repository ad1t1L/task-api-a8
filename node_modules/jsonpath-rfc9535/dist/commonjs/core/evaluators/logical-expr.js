"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = evalLogicalExpr;
const assertions_ts_1 = require("../../utils/assertions.js");
const comparison_expr_ts_1 = __importDefault(require("./comparison-expr.js"));
const test_expr_ts_1 = __importDefault(require("./test-expr.js"));
function evalLogicalExpr(ctx, item, node) {
    switch (node.type) {
        case "LogicalNotExpr":
            return !evalLogicalExpr(ctx, item, node.expression);
        case "LogicalAndExpr":
            return (evalLogicalExpr(ctx, item, node.left) &&
                evalLogicalExpr(ctx, item, node.right));
        case "LogicalOrExpr":
            return (evalLogicalExpr(ctx, item, node.left) ||
                evalLogicalExpr(ctx, item, node.right));
        case "TestExpr":
            return (0, test_expr_ts_1.default)(ctx, item, node);
        case "ComparisonExpr":
            return (0, comparison_expr_ts_1.default)(ctx, item, node);
        default:
            (0, assertions_ts_1.assertDefinedNodeType)(node);
    }
}
//# sourceMappingURL=logical-expr.js.map