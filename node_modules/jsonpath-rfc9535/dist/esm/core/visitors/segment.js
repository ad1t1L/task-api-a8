import { assertDefinedNodeType } from "../../utils/assertions.js";
import { isStackItemWithArrayValue, isStackItemWithObjectValue, } from "../../utils/guards.js";
import visitBracketedSelection from "./bracketed-selection.js";
import visitIndexSelector from "./index-selector.js";
import visitMemberNameShorthand from "./member-name-shorthand.js";
import visitNameSelector from "./name-selector.js";
import visitWildcardSelector from "./wildcard-selector.js";
export function visitSegment(ctx, item, node) {
    switch (node.type) {
        case "BracketedSelection":
            return visitBracketedSelection(ctx, item, node);
        case "WildcardSelector":
            return visitWildcardSelector(ctx, item);
        case "MemberNameShorthand":
            if (isStackItemWithObjectValue(item)) {
                visitMemberNameShorthand(ctx, item, node);
            }
            break;
        case "NameSelector":
            if (isStackItemWithObjectValue(item)) {
                visitNameSelector(ctx, item, node);
            }
            break;
        case "IndexSelector":
            if (isStackItemWithArrayValue(item)) {
                visitIndexSelector(ctx, item, node);
            }
            break;
        default:
            assertDefinedNodeType(node);
    }
}
//# sourceMappingURL=segment.js.map