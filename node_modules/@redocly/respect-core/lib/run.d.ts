import { type Config, type CollectFn, type LoggerInterface, type BaseResolver } from '@redocly/openapi-core';
import { type RunFileResult } from './types.js';
export type RespectOptions = {
    files: string[];
    input?: string | string[];
    server?: string | string[];
    workflow?: string[];
    skip?: string[];
    verbose?: boolean;
    severity?: string;
    config: Config;
    maxSteps: number;
    maxFetchTimeout: number;
    executionTimeout?: number;
    collectSpecData?: CollectFn;
    requestFileLoader: {
        getFileBody: (filePath: string) => Promise<Blob>;
    };
    envVariables?: Record<string, string>;
    version?: string;
    logger: LoggerInterface;
    fetch: typeof fetch;
    externalRefResolver?: BaseResolver;
    skipLint?: boolean;
    noSecretsMasking?: boolean;
};
export declare function run(options: RespectOptions): Promise<RunFileResult[]>;
//# sourceMappingURL=run.d.ts.map