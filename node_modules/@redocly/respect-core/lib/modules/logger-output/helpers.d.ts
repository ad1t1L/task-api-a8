import { type LoggerInterface, type Totals } from '@redocly/openapi-core';
import { type Check, type VerboseLog, type Step } from '../../types.js';
export declare const RESET_ESCAPE_CODE: string;
export declare function removeExtraIndentation(message: string | undefined): string;
export declare function indent(str: string, level: number): string;
export declare function printWorkflowSeparatorLine(logger: LoggerInterface): void;
export declare function printWorkflowSeparator({ fileName, workflowName, skipLineSeparator, logger, }: {
    fileName: string;
    workflowName: string | undefined;
    skipLineSeparator?: boolean;
    logger: LoggerInterface;
}): void;
export declare function printRequiredWorkflowSeparator(parentWorkflowId: string, logger: LoggerInterface): void;
export declare function printChildWorkflowSeparator(parentStepId: string, logger: LoggerInterface): void;
export declare function printActionsSeparator({ stepId, actionName, kind, logger, }: {
    stepId: string;
    actionName: string;
    kind: 'failure' | 'success';
    logger: LoggerInterface;
}): void;
export declare function printStepSeparatorLine(logger: LoggerInterface): void;
export declare function printConfigLintTotals(totals: Totals, logger: LoggerInterface): void;
export declare function printStepDetails({ testNameToDisplay, checks, verboseLogs, verboseResponseLogs, logger, }: {
    testNameToDisplay: string;
    checks: Check[];
    verboseLogs?: VerboseLog;
    verboseResponseLogs?: VerboseLog;
    logger: LoggerInterface;
}): void;
export declare function printUnknownStep(step: Step, logger: LoggerInterface): void;
//# sourceMappingURL=helpers.d.ts.map